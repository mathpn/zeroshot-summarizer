---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  broker:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic inference_queue --replication-factor 1 --partitions 2

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "

  rabbitmq:
    image: rabbitmq:3.10-management
    environment:
      RABBITMQ_DEFAULT_USER: "my_user"
      RABBITMQ_DEFAULT_PASS: "my_password"
    ports:
      - 5672:5672
      - 15672:15672
    restart: always

  summarizer:
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: .
      dockerfile: app/Dockerfile
    environment:
      PROJECT_NAME: "zeroshot_summarizer"
      PYTHONPATH: /home/
      WAIT_HOSTS: broker:9092, rabbitmq:5672
    ports:
      - "8383:8000"
    command: bash /home/app/start_dev.sh
    depends_on:
      - broker
      - zookeeper
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  consumer:
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: .
      dockerfile: consumer/Dockerfile
    environment:
      PYTHONPATH: /home/
      WAIT_HOSTS: broker:9092, rabbitmq:5672, summarizer:8000
      OMP_NUM_THREADS: 8
    command: bash /home/consumer/start.sh 2
    volumes:
      - ./models:/home/models
      - ./huggingface_models:/root/.cache/huggingface/
    depends_on:
      - broker
      - summarizer
      - rabbitmq
    restart: always
